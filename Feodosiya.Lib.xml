<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Feodosiya.Lib</name>
    </assembly>
    <members>
        <member name="T:Feodosiya.Lib.App.AppHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.App.AppHelper.GenerateGuid(System.String)">
            <summary>
            Создает GUID в указанном формате
            </summary>
            <param name="format">Формат GUID. Возможные варианты: N, D, B, P, X</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.App.AppHelper.AddToAutorun(System.String)">
            <summary>
            Добавляет указанную программу в автозагрузку
            </summary>
            <param name="pathToApp">Путь к программе добавляемой в автозагрузку</param>
        </member>
        <member name="M:Feodosiya.Lib.App.AppHelper.RemoveFromAutorun(System.String)">
            <summary>
            Удаляет указанную программу из автозагрузки
            </summary>
            <param name="pathToApp">Путь к программе удаляемой из автозагрузки</param>
        </member>
        <member name="M:Feodosiya.Lib.App.AppHelper.AssociateExtensionWithApp(System.String,System.String)">
            <summary>
            Сопоставляет указанное расширение файла с указанной программой
            </summary>
            <param name="pathToApp">Путь к программе</param>
            <param name="extension">Расширение файла (например .txt)</param>
        </member>
        <member name="T:Feodosiya.Lib.Collections.CollectionExtensions">
            <summary>
            Содержит расширения для коллекций
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Collections.CollectionExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Выполняет перебор коллекции выполняя указанный метод при каждой итерации
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ie">Коллекция</param>
            <param name="action">Делегат с необходимым действием</param>
        </member>
        <member name="T:Feodosiya.Lib.Conf.ConfHelper">
            <summary>
            Предоставляет методы для работы с файлом конфигурации в формате JSON
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.#ctor(System.String)">
            <summary>
            Инициализирует пустой экземпляр класса Feodosiya.Lib.Conf.ConfHelper с заданным путем конфигурационного файла
            </summary>
            <param name="confPath">Путь к конфигурационному файлу</param>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.LoadConfig``1">
            <summary>
            Загружает файл конфигурации и десериализует его содержимое
            </summary>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.SaveConfig(System.Object)">
            <summary>
            Выполняет сериализацию объекта конфигурации и сохраняет его содержимое в файл конфигурации
            </summary>
            <param name="configuration">Объект конфигурации</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.SaveConfig(System.Object,System.Boolean)">
            <summary>
            Выполняет сериализацию объекта конфигурации и сохраняет его содержимое в файл конфигурации
            </summary>
            <param name="configuration">Объект конфигурации</param>
            <param name="formatJson">Если имеет значение true, то файл конфигурации будет приведен к читаемому виду</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.SaveConfig(System.Object,System.Text.Encoding)">
            <summary>
            Выполняет сериализацию объекта конфигурации и сохраняет его содержимое в файл конфигурации
            </summary>
            <param name="configuration">Объект конфигурации</param>
            <param name="encoding">Кодировка в которой будет сохранен файл конфигурации</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.SaveConfig(System.Object,System.Text.Encoding,System.Boolean)">
            <summary>
            Выполняет сериализацию объекта конфигурации и сохраняет его содержимое в файл конфигурации
            </summary>
            <param name="configuration">Объект конфигурации</param>
            <param name="encoding">Кодировка в которой будет сохранен файл конфигурации</param>
            <param name="formatJson">Если имеет значение true, то файл конфигурации будет приведен к читаемому виду</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.GetConfigJson(System.Object)">
            <summary>
            Выполняет сериализацию объекта конфигурации и возвращает его содержимое в виде строки JSON
            </summary>
            <param name="configuration">Объект конфигурации</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.GetConfigJson(System.Object,System.Boolean)">
            <summary>
            Выполняет сериализацию объекта конфигурации и возвращает его содержимое в виде строки JSON
            </summary>
            <param name="configuration">Объект конфигурации</param>
            <param name="formatJson">Если имеет значение true, то JSON будет приведен к читаемому виду</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.GetConfigJson(System.Object,System.Text.Encoding)">
            <summary>
            Выполняет сериализацию объекта конфигурации и возвращает его содержимое в виде строки JSON
            </summary>
            <param name="configuration">Объект конфигурации</param>
            <param name="encoding">Кодировка в которую будет преобразован JSON</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Conf.ConfHelper.GetConfigJson(System.Object,System.Text.Encoding,System.Boolean)">
            <summary>
            Выполняет сериализацию объекта конфигурации и возвращает его содержимое в виде строки JSON
            </summary>
            <param name="configuration">Объект конфигурации</param>
            <param name="encoding">Кодировка в которую будет преобразован JSON</param>
            <param name="formatJson">Если имеет значение true, то JSON будет приведен к читаемому виду</param>
            <returns></returns>
        </member>
        <member name="P:Feodosiya.Lib.Conf.ConfHelper.Path">
            <summary>
            Возвращает путь к конфигурационному файлу
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Conf.ConfHelper.Success">
            <summary>
            Получает значение, указывающее на то, успешно ли загружен файл конфигурации 
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Conf.ConfHelper.LastError">
            <summary>
            Возвращает ошибку возникшую в ходе загрузки файла конфигурации
            </summary>
        </member>
        <member name="T:Feodosiya.Lib.InteropServices.Win32ApiHelper">
            <summary>
            Класс предоставлющий методы Win32 API
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.WM_SETREDRAW">
            <summary>
            Приложение отправляет сообщение WM_SETREDRAW окну для того, чтобы дать возможность изменениям в этом окне быть перерисованными или воспрепятствовать изменениям в этом окне быть перерисованными
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.SW_HIDE">
            <summary>
            Скрывает окно
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.SW_SHOW">
            <summary>
            Показывает окно
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.EM_SETCUEBANNER">
            <summary>
            Устанавливает watermark элемента управления
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.WM_NCLBUTTONDOWN">
            <summary>
            Сообщение WM_NCLBUTTONDOWN посылается тогда, если пользователь нажимает левую кнопку мыши, в то время, когда курсор находится в нерабочей области окна
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.HT_CAPTION">
            <summary>
            Этот сигнал передается в окно для того, чтобы определить, какая часть окна соответствует определенному экрану координат
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.Nullhandle">
            <summary>
            Нулевой дескриптор
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Отправляет заданное сообщение окну или окнам
            </summary>
            <param name="hWnd">Дескриптор окна</param>
            <param name="wMsg">Отправляемое сообщение</param>
            <param name="wParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <param name="lParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <returns>Результат обработки сообщения</returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.SendMessage(System.IntPtr,System.UInt32,System.Int32,System.Int32)">
            <summary>
            Отправляет заданное сообщение окну или окнам
            </summary>
            <param name="hWnd">Дескриптор окна</param>
            <param name="wMsg">Отправляемое сообщение</param>
            <param name="wParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <param name="lParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <returns>Результат обработки сообщения</returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.SendMessage(System.IntPtr,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Отправляет заданное сообщение окну или окнам
            </summary>
            <param name="hWnd">Дескриптор окна</param>
            <param name="wMsg">Отправляемое сообщение</param>
            <param name="wParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <param name="lParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <returns>Результат обработки сообщения</returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.Text.StringBuilder)">
            <summary>
            Отправляет заданное сообщение окну или окнам
            </summary>
            <param name="hWnd">Дескриптор окна</param>
            <param name="wMsg">Отправляемое сообщение</param>
            <param name="wParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <param name="lParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <returns>Результат обработки сообщения</returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.SendMessage(System.IntPtr,System.UInt32,System.IntPtr,System.String)">
            <summary>
            Отправляет заданное сообщение окну или окнам
            </summary>
            <param name="hWnd">Дескриптор окна</param>
            <param name="wMsg">Отправляемое сообщение</param>
            <param name="wParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <param name="lParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <returns>Результат обработки сообщения</returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.SendMessageW(System.IntPtr,System.UInt32,System.IntPtr,System.String)">
            <summary>
            Отправляет заданное сообщение окну или окнам. Версия для UNICODE
            </summary>
            <param name="hWnd">Дескриптор окна</param>
            <param name="wMsg">Отправляемое сообщение</param>
            <param name="wParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <param name="lParam">Определяет дополнительную конкретизирующую сообщение информацию</param>
            <returns>Результат обработки сообщения</returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.ReleaseCapture">
            <summary>
            Завершает фиксацию мыши для указанного окна
            </summary>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.GetConsoleWindow">
            <summary>
            Получает дескриптор консольного окна в связанном процессе
            </summary>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            Устанавливает состояние отображения заданного окна окна
            </summary>
            <param name="hWnd">Дескриптор окна</param>
            <param name="nCmdShow">Параметр отображения окна</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.SwitchToThisWindow(System.IntPtr,System.Boolean)">
            <summary>
            Переключает фокус на указанное окно и переносит ено на передний план
            </summary>
            <param name="hWnd">Дескриптор окна</param>
            <param name="fAltTab">Переключаться посредством комбинации клавиш Alt+Tab, если значение этого параметра установлено в true</param>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            Возвращает строку из указанной секции INI файла
            </summary>
            <param name="lpAppName">Название раздела содержащего имя ключа</param>
            <param name="lpKeyName">Имя ключа связанного с возвращаемой строкой</param>
            <param name="lpDefault">Строка по умолчанию</param>
            <param name="lpReturnedString">Буфер в который будет помещена получаемая строка</param>
            <param name="nSize">Размер буфера lpReturnedString</param>
            <param name="lpFileName">Путь к INI файлу</param>
            <returns>Количество символов в полученной строке</returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            Копирует строку в указанную секцию INI файла
            </summary>
            <param name="lpAppName">Имя раздела в который будет скопирована устанавливаемая строка</param>
            <param name="lpKeyName">Имя ключа связанного с устанавливаемой строкой</param>
            <param name="lpString">Устанавливаемое строковое значение</param>
            <param name="lpFileName">Путь к INI файлу</param>
            <returns>При успешном выполнении, возвращает true</returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.ExitWindowsEx(System.UInt32,System.UInt32)">
            <summary>
            Logs off the interactive user, shuts down the system, or shuts down and restarts the system. It sends the WM_QUERYENDSESSION message to all applications to determine if they can be terminated
            </summary>
            <param name="uFlags">The shutdown type</param>
            <param name="dwReason">The reason for initiating the shutdown. This parameter must be one of the system shutdown reason codes</param>
            <returns>If the function succeeds, the return value is nonzero</returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.OpenProcessToken(System.IntPtr,System.UInt32,System.IntPtr@)">
            <summary>
            The OpenProcessToken function opens the access token associated with a process
            </summary>
            <param name="ProcessHandle">A handle to the process whose access token is opened. The process must have the PROCESS_QUERY_INFORMATION access permission</param>
            <param name="DesiredAccess">Specifies an access mask that specifies the requested types of access to the access token. These requested access types are compared with the discretionary access control list (DACL) of the token to determine which accesses are granted or denied</param>
            <param name="TokenHandle">A pointer to a handle that identifies the newly opened access token when the function returns</param>
            <returns>If the function succeeds, the return value is nonzero</returns>
        </member>
        <member name="T:Feodosiya.Lib.InteropServices.Win32ApiHelper.LUID">
            <summary>
            An LUID is a 64-bit value guaranteed to be unique only on the system on which it was generated. The uniqueness of a locally unique identifier (LUID) is guaranteed only until the system is restarted
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.LUID.LowPart">
            <summary>
            Low-order bits
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.LUID.HighPart">
            <summary>
            High-order bits
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.LookupPrivilegeValue(System.String,System.String,Feodosiya.Lib.InteropServices.Win32ApiHelper.LUID@)">
            <summary>
            The LookupPrivilegeValue function retrieves the locally unique identifier (LUID) used on a specified system to locally represent the specified privilege name
            </summary>
            <param name="lpSystemName">A pointer to a null-terminated string that specifies the name of the system on which the privilege name is retrieved. If a null string is specified, the function attempts to find the privilege name on the local system</param>
            <param name="lpName">A pointer to a null-terminated string that specifies the name of the privilege, as defined in the Winnt.h header file. For example, this parameter could specify the constant, SE_SECURITY_NAME, or its corresponding string, "SeSecurityPrivilege"</param>
            <param name="lpLuid">A pointer to a variable that receives the LUID by which the privilege is known on the system specified by the lpSystemName parameter</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.CloseHandle(System.IntPtr)">
            <summary>
            Closes an open object handle
            </summary>
            <param name="hObject">A valid handle to an open object</param>
            <returns></returns>
        </member>
        <member name="T:Feodosiya.Lib.InteropServices.Win32ApiHelper.LUID_AND_ATTRIBUTES">
            <summary>
            The LUID_AND_ATTRIBUTES structure represents a locally unique identifier (LUID) and its attributes
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.LUID_AND_ATTRIBUTES.Luid">
            <summary>
            Specifies an LUID value
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.LUID_AND_ATTRIBUTES.Attributes">
            <summary>
            Specifies attributes of the LUID. This value contains up to 32 one-bit flags. Its meaning is dependent on the definition and use of the LUID
            </summary>
        </member>
        <member name="T:Feodosiya.Lib.InteropServices.Win32ApiHelper.TOKEN_PRIVILEGES">
            <summary>
            The TOKEN_PRIVILEGES structure contains information about a set of privileges for an access token
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.TOKEN_PRIVILEGES.PrivilegeCount">
            <summary>
            This must be set to the number of entries in the Privileges array
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.TOKEN_PRIVILEGES.Privileges">
            <summary>
            Specifies an array of LUID_AND_ATTRIBUTES structures. Each structure contains the LUID and attributes of a privilege. To get the name of the privilege associated with a LUID, call the LookupPrivilegeName function, passing the address of the LUID as the value of the lpLuid parameter
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.InteropServices.Win32ApiHelper.AdjustTokenPrivileges(System.IntPtr,System.Boolean,Feodosiya.Lib.InteropServices.Win32ApiHelper.TOKEN_PRIVILEGES@,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            The AdjustTokenPrivileges function enables or disables privileges in the specified access token. Enabling or disabling privileges in an access token requires TOKEN_ADJUST_PRIVILEGES access
            </summary>
            <param name="TokenHandle">A handle to the access token that contains the privileges to be modified. The handle must have TOKEN_ADJUST_PRIVILEGES access to the token. If the PreviousState parameter is not NULL, the handle must also have TOKEN_QUERY access</param>
            <param name="DisableAllPrivileges">Specifies whether the function disables all of the token's privileges. If this value is TRUE, the function disables all privileges and ignores the NewState parameter. If it is FALSE, the function modifies privileges based on the information pointed to by the NewState parameter</param>
            <param name="NewState">A pointer to a TOKEN_PRIVILEGES structure that specifies an array of privileges and their attributes. If the DisableAllPrivileges parameter is FALSE, the AdjustTokenPrivileges function enables, disables, or removes these privileges for the token. The following table describes the action taken by the AdjustTokenPrivileges function, based on the privilege attribute</param>
            <param name="BufferLength">Specifies the size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be zero if the PreviousState parameter is NULL</param>
            <param name="PreviousState">A pointer to a buffer that the function fills with a TOKEN_PRIVILEGES structure that contains the previous state of any privileges that the function modifies. That is, if a privilege has been modified by this function, the privilege and its previous state are contained in the TOKEN_PRIVILEGES structure referenced by PreviousState. If the PrivilegeCount member of TOKEN_PRIVILEGES is zero, then no privileges have been changed by this function. This parameter can be NULL</param>
            <param name="ReturnLength">A pointer to a variable that receives the required size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be NULL if PreviousState is NULL</param>
            <returns></returns>
        </member>
        <member name="T:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes">
            <summary>
            System Shutdown Reason Codes
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MAJOR_APPLICATION">
            <summary>
            Application issue
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MAJOR_HARDWARE">
            <summary>
            Hardware issue
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MAJOR_LEGACY_API">
            <summary>
            The InitiateSystemShutdown function was used instead of InitiateSystemShutdownEx.
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MAJOR_OPERATINGSYSTEM">
            <summary>
            Operating system issue
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MAJOR_OTHER">
            <summary>
            Other issue
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MAJOR_POWER">
            <summary>
            Power failure
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MAJOR_SOFTWARE">
            <summary>
            Software issue
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MAJOR_SYSTEM">
            <summary>
            System failure
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_BLUESCREEN">
            <summary>
            Blue screen crash event
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_CORDUNPLUGGED">
            <summary>
            Unplugged
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_DISK">
            <summary>
            Disk
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_ENVIRONMENT">
            <summary>
            Environment
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_HARDWARE_DRIVER">
            <summary>
            Driver
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_HOTFIX">
            <summary>
            Hot fix
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_HOTFIX_UNINSTALL">
            <summary>
            Hot fix uninstallation
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_HUNG">
            <summary>
            Unresponsive
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_INSTALLATION">
            <summary>
            Installation
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_MAINTENANCE">
            <summary>
            Maintenance
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_MMC">
            <summary>
            MMC issue
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_NETWORK_CONNECTIVITY">
            <summary>
            Network connectivity
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_NETWORKCARD">
            <summary>
            Network card
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_OTHER">
            <summary>
            Other issue
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_OTHERDRIVER">
            <summary>
            Other driver event
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_POWER_SUPPLY">
            <summary>
            Power supply
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_PROCESSOR">
            <summary>
            Processor
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_RECONFIG">
            <summary>
            Reconfigure
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_SECURITY">
            <summary>
            Security issue
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_SECURITYFIX">
            <summary>
            Security patch
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_SECURITYFIX_UNINSTALL">
            <summary>
            Security patch uninstallation
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_SERVICEPACK">
            <summary>
            Service pack
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_SERVICEPACK_UNINSTALL">
            <summary>
            Service pack uninstallation
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_TERMSRV">
            <summary>
            Terminal Services
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_UNSTABLE">
            <summary>
            Unstable
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_UPGRADE">
            <summary>
            Upgrade
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_MINOR_WMI">
            <summary>
            WMI issue
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_FLAG_USER_DEFINED">
            <summary>
            The reason code is defined by the user. For more information, see Defining a Custom Reason Code.
            If this flag is not present, the reason code is defined by the system
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.Win32ApiHelper.ShutdownReasonCodes.SHTDN_REASON_FLAG_PLANNED">
            <summary>
            The shutdown was planned. The system generates a System State Data (SSD) file. This file contains system state information such as the processes, threads, memory usage, and configuration. 
            If this flag is not present, the shutdown was unplanned. Notification and reporting options are controlled by a set of policies. For example, after logging in, the system displays a dialog box reporting the unplanned shutdown if the policy has been enabled. An SSD file is created only if the SSD policy is enabled on the system. The administrator can use Windows Error Reporting to send the SSD data to a central location, or to Microsoft.
            </summary>
        </member>
        <member name="T:Feodosiya.Lib.InteropServices.winuser_h">
            <summary>
            winuser.h
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.WM_SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu (formerly known as the system or control menu)
            or when the user chooses the maximize button, minimize button, restore button, or close button
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_CLOSE">
            <summary>
            Closes the window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_CONTEXTHELP">
            <summary>
            Changes the cursor to a question mark with a pointer. If the user then clicks a control in the dialog box, the control receives a WM_HELP message
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_DEFAULT">
            <summary>
            Selects the default item; the user double-clicked the window menu
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_HOTKEY">
            <summary>
            Activates the window associated with the application-specified hot key. The lParam parameter identifies the window to activate
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_HSCROLL">
            <summary>
            Scrolls horizontally
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SCF_ISSECURE">
            <summary>
            Indicates whether the screen saver is secure
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_KEYMENU">
            <summary>
            Retrieves the window menu as a result of a keystroke. For more information, see the Remarks section
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_MAXIMIZE">
            <summary>
            Maximizes the window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_MINIMIZE">
            <summary>
            Minimizes the window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_MONITORPOWER">
            <summary>
            Sets the state of the display. This command supports devices that have power-saving features, such as a battery-powered personal computer. 
            The lParam parameter can have the following values:
            -1 (the display is powering on)
            1 (the display is going to low power)
            2 (the display is being shut off)
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_MOUSEMENU">
            <summary>
            Retrieves the window menu as a result of a mouse click
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_MOVE">
            <summary>
            Moves the window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_NEXTWINDOW">
            <summary>
            Moves to the next window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_PREVWINDOW">
            <summary>
            Moves to the previous window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_RESTORE">
            <summary>
            Restores the window to its normal position and size
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_SCREENSAVE">
            <summary>
            Executes the screen saver application specified in the [boot] section of the System.ini file
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_SIZE">
            <summary>
            Sizes the window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_TASKLIST">
            <summary>
            Activates the Start menu
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SC_VSCROLL">
            <summary>
            Scrolls vertically
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_FORCEMINIMIZE">
            <summary>
            Minimizes a window, even if the thread that owns the window is not responding. This flag should only be used when minimizing windows from a different thread
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_HIDE">
            <summary>
            Hides the window and activates another window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_MAXIMIZE">
            <summary>
            Maximizes the specified window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_MINIMIZE">
            <summary>
            Minimizes the specified window and activates the next top-level window in the Z order
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_RESTORE">
            <summary>
            Activates and displays the window. If the window is minimized or maximized, the system restores it to its original size and position.
            An application should specify this flag when restoring a minimized window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_SHOW">
            <summary>
            Activates the window and displays it in its current size and position
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_SHOWDEFAULT">
            <summary>
            Sets the show state based on the SW_ value specified in the STARTUPINFO structure passed to the CreateProcess function by the program
            that started the application
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_SHOWMAXIMIZED">
            <summary>
            Activates the window and displays it as a maximized window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_SHOWMINIMIZED">
            <summary>
            Activates the window and displays it as a minimized window
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_SHOWMINNOACTIVE">
            <summary>
            Displays the window as a minimized window. This value is similar to SW_SHOWMINIMIZED, except the window is not activated
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_SHOWNA">
            <summary>
            Displays the window in its current size and position. This value is similar to SW_SHOW, except that the window is not activated
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_SHOWNOACTIVATE">
            <summary>
            Displays a window in its most recent size and position. This value is similar to SW_SHOWNORMAL, except that the window is not activated
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.SW_SHOWNORMAL">
            <summary>
            Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position.
            An application should specify this flag when displaying the window for the first time
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.EWX_HYBRID_SHUTDOWN">
            <summary>
            Beginning with Windows 8:  You can prepare the system for a faster startup by combining the EWX_HYBRID_SHUTDOWN flag with the EWX_SHUTDOWN flag
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.EWX_LOGOFF">
            <summary>
            Shuts down all processes running in the logon session of the process that called the ExitWindowsEx function. Then it logs the user off.
            This flag can be used only by processes running in an interactive user's logon session.
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.EWX_POWEROFF">
            <summary>
            Shuts down the system and turns off the power. The system must support the power-off feature.
            The calling process must have the SE_SHUTDOWN_NAME privilege. For more information, see the following Remarks section.
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.EWX_REBOOT">
            <summary>
            Shuts down the system and then restarts the system.
            The calling process must have the SE_SHUTDOWN_NAME privilege. For more information, see the following Remarks section.
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.EWX_RESTARTAPPS">
            <summary>
            Shuts down the system and then restarts it, as well as any applications that have been registered for restart using the RegisterApplicationRestart function. These application receive the WM_QUERYENDSESSION message with lParam set to the ENDSESSION_CLOSEAPP value.
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.EWX_SHUTDOWN">
            <summary>
            Shuts down the system to a point at which it is safe to turn off the power. All file buffers have been flushed to disk, and all running processes have stopped.
            The calling process must have the SE_SHUTDOWN_NAME privilege. For more information, see the following Remarks section.
            
            Specifying this flag will not turn off the power even if the system supports the power-off feature. You must specify EWX_POWEROFF to do this.Windows XP with SP1:  If the system supports the power-off feature, specifying this flag turns off the power.
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.EWX_FORCE">
            <summary>
            This flag has no effect if terminal services is enabled. Otherwise, the system does not send the WM_QUERYENDSESSION message. This can cause applications to lose data. Therefore, you should only use this flag in an emergency.
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.InteropServices.winuser_h.EWX_FORCEIFHUNG">
            <summary>
            Forces processes to terminate if they do not respond to the WM_QUERYENDSESSION or WM_ENDSESSION message within the timeout interval.
            </summary>
        </member>
        <member name="T:Feodosiya.Lib.IO.IOHelper">
            <summary>
            Предоставляет методы для работы с файлами
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.IO.IOHelper.IsPathDirectory(System.String)">
            <summary>
            Возвращает значение определяющее является заданный путь папкой или файлом
            </summary>
            <param name="path">Проверяемый путь</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.IO.PathTooLongException"></exception>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
            <exception cref="T:System.IO.DirectoryNotFoundException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.IO.IOHelper.IsFullPath(System.String)">
            <summary>
            Возвращает значение определяющее является ли заданный путь полным
            </summary>
            <param name="path">Проверяемый путь</param>
            <exception cref="T:System.ArgumentException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.IO.IOHelper.GetExeVersion(System.Reflection.Assembly)">
            <summary>
            Возвращает версию данной программы
            </summary>
            <param name="assembly">Сборка, версию которой необходимо получить</param>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.IO.IOHelper.GetCurrentDir(System.Reflection.Assembly)">
            <summary>
            Возвращает путь к текущей рабочей папке
            </summary>
            <param name="assembly">Сборка, папку которой необходимо получить</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.IO.IOHelper.IsFileAssembly(System.String)">
            <summary>
            Проверяет, является ли заданный файл сборкой .NET
            </summary>
            <param name="fileName">Путь к файлу</param>
            <returns></returns>
        </member>
        <member name="T:Feodosiya.Lib.IO.Pipes.NamedPipeListenerMessageReceivedEventArgs`1">
            <summary>Содержит данные о событии для <see cref="T:Feodosiya.Lib.IO.Pipes.NamedPipeMessageReceivedHandler`1" /> событий</summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListenerMessageReceivedEventArgs`1.#ctor(`0)">
            <summary>Инициализирует экземпляр <see cref="T:Feodosiya.Lib.IO.Pipes.NamedPipeListenerMessageReceivedEventArgs`1" /> с указанным <paramref name="message" />.</summary>
            <param name="message">Сообщение, переданное событием</param>
        </member>
        <member name="P:Feodosiya.Lib.IO.Pipes.NamedPipeListenerMessageReceivedEventArgs`1.Message">
            <summary>Получает сообщение, переданное событием</summary>
        </member>
        <member name="T:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorEventArgs">
            <summary>Содержит данные о событии для <see cref="T:Feodosiya.Lib.IO.Pipes.NamedPipeMessageErrorHandler" /> событий</summary>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorEventArgs.#ctor(Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorType,System.Exception)">
            <summary>Инициализирует экземпляр <see cref="T:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorEventArgs" /> с указанным <paramref name="errorType" /> и <paramref name="ex" />.</summary>
            <param name="errorType">Тип ошибки <see cref="T:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorType" />, который описывает часть процесса прослушивания, где была обнаружена ошибка</param>
            <param name="ex">Исключение <see cref="P:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorEventArgs.Exception" /> которое было выброшено</param>
        </member>
        <member name="P:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorEventArgs.ErrorType">
            <summary>Получает тип ошибки <see cref="T:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorType" />, который описывает часть процесса прослушивания, где была обнаружена ошибка</summary>
        </member>
        <member name="P:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorEventArgs.Exception">
            <summary>Получает <see cref="P:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorEventArgs.Exception" /> которое было перехвачено</summary>
        </member>
        <member name="T:Feodosiya.Lib.IO.Pipes.NamedPipeMessageReceivedHandler`1">
            <summary>Представляет метод, который будет обрабатывать событие, когда сообщение получено через именованные каналы</summary>
            <typeparam name="T">Тип сообщения, которое было получено</typeparam>
            <param name="sender">Источник события</param>
            <param name="e">Данные о событии, переданные событием, в том числе полученное сообщение</param>
        </member>
        <member name="T:Feodosiya.Lib.IO.Pipes.NamedPipeMessageErrorHandler">
            <summary>Представляет метод, который будет обрабатывать событие, которое запускается при обнаружении исключения</summary>
            <param name="sender">Источник события</param>
            <param name="e">Данные события, переданные событием, включали тип ошибки и исключение, которое было перехвачено</param>
        </member>
        <member name="T:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorType">
            <summary>Включает в себя различные типы ошибок, которые описывают, где в процессе прослушивания было обнаружено исключение</summary>
        </member>
        <member name="F:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorType.BeginWaitForConnection">
            <summary>Указывает на то, что исключение было обнаружено во время вызова <see cref="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)" />.</summary>
        </member>
        <member name="F:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorType.EndWaitForConnection">
            <summary>Указывает на то, что исключение было обнаружено во время вызова <see cref="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)" />.</summary>
        </member>
        <member name="F:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorType.DeserializeMessage">
            <summary>Указывает на то, что исключение было обнаружено во время десериализации сообщения, полученного из именованного канала</summary>
        </member>
        <member name="F:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorType.CloseAndDisposePipe">
            <summary>Указывает на то, что исключение было обнаружено во время закрытия или освобождения ресурсов использованного именованного канала</summary>
        </member>
        <member name="F:Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorType.NotifyMessageReceived">
            <summary>Указывает на то, что исключение было обнаружено во время вызова <see cref="E:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.MessageReceived"/> события</summary>
        </member>
        <member name="T:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1">
            <summary>Вспомогательный класс для отправки и получения сообщений с использованием именованных каналов</summary>
            <typeparam name="T">Тип сообщения, которое будет отправлено или получено</typeparam>
        </member>
        <member name="E:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.MessageReceived">
            <summary>Происходит при получении сообщения</summary>
        </member>
        <member name="E:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.Error">
            <summary>Происходит при обнаружении исключения</summary>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.#ctor(System.String,System.Security.Principal.WellKnownSidType)">
            <summary>Инициализирует новый экземпляр <see cref="T:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1" /> используя указанное <paramref name="pipeName" /></summary>
            <param name="pipeName">Имя именованного канала, которое будет использоваться для прослушивания</param>
            <param name="sidType">Тип идентификатора безопасности (SID)</param>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.#ctor(System.String)">
            <summary>Инициализирует новый экземпляр <see cref="T:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1" /> используя указанное <paramref name="pipeName" /></summary>
            <param name="pipeName">Имя именованного канала, которое будет использоваться для прослушивания</param>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.#ctor">
            <summary>Инициализирует новый экземпляр <see cref="T:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1" /> используя имя канала по умолчанию</summary>
            <remarks>Имя канала по умолчанию - это полное имя типа экземпляра</remarks>
        </member>
        <member name="P:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.PipeName">
            <summary>Имя именованного канала, который будет использоваться для прослушивания</summary>
        </member>
        <member name="P:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.SidType">
            <summary>
            Тип идентификатора безопасности (SID)
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.Start">
            <summary>Начинает прослушивать именованный канал для указанного экземпляра</summary>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.OnMessageReceived(Feodosiya.Lib.IO.Pipes.NamedPipeListenerMessageReceivedEventArgs{`0})">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.OnError(Feodosiya.Lib.IO.Pipes.NamedPipeListenerErrorEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.SendMessage(`0)">
            <summary>Отправляет указанное <paramref name="message" /> на именованный по умолчанию канал</summary>        
            <param name="message">Сообщение для отправки</param>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.SendMessage(`0,System.Int32)">
            <summary>Отправляет указанное <paramref name="message" /> на именованный по умолчанию канал</summary>        
            <param name="message">Сообщение для отправки</param>
            <param name="timeout">Количество миллисекунд, определяющее время ожидания соединения с сервером</param>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.SendMessage(System.String,`0)">
            <summary>Отправляет указанное <paramref name="message" /> на указанный именованный канал</summary>
            <param name="pipeName">Имя именованного канала, на который будет отправлено сообщение</param>
            <param name="message">Сообщение для отправки</param>
        </member>
        <member name="M:Feodosiya.Lib.IO.Pipes.NamedPipeListener`1.SendMessage(System.String,`0,System.Int32)">
            <summary>Отправляет указанное <paramref name="message" /> на указанный именованный канал</summary>
            <param name="pipeName">Имя именованного канала, на который будет отправлено сообщение</param>
            <param name="message">Сообщение для отправки</param>
            <param name="timeout">Количество миллисекунд, определяющее время ожидания соединения с сервером</param>
        </member>
        <member name="T:Feodosiya.Lib.Logs.DebugHelper">
            <summary>
            Класс предоставляющий методы и свойства для работы с логами и отладкой программы
            </summary>
        </member>
        <member name="T:Feodosiya.Lib.Logs.DebugHelper.DebugLevels">
            <summary>
            Представляет типы уровней логирования 
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.DebugHelper.DebugLevels.None">
            <summary>
            Без логирования
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.DebugHelper.DebugLevels.Debug">
            <summary>
            Уровень логирования - отладка
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.DebugHelper.DebugLevels.Information">
            <summary>
            Уровень логирования - информация
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.DebugHelper.DebugLevels.Warning">
            <summary>
            Уровень логирования - предупреждение
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.DebugHelper.DebugLevels.Error">
            <summary>
            Уровень логирования - ошибка
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.DebugHelper.DebugLevels.Fatal">
            <summary>
            Уровень логирования - критическая ошибка
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Logs.DebugHelper.DebugLevel">
            <summary>
            Возвращает или задает текущий уровень логирования
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Logs.DebugHelper.ConsoleWriteLine(System.String,Feodosiya.Lib.Logs.DebugHelper.DebugLevels)">
            <summary>
            Выводит в консоль строку отформатированную в соответствии с уровнем логирования
            </summary>
            <param name="text">Выводимая строка</param>
            <param name="level">Уровень логирования</param>
        </member>
        <member name="T:Feodosiya.Lib.Logs.LogTypes">
            <summary>
            Представляет перечисление возможных типов лог-файла
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.LogTypes.Text">
            <summary>
            Текстовый лог-файл
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.LogTypes.Memory">
            <summary>
            Лог-файл в памяти
            </summary>
        </member>
        <member name="T:Feodosiya.Lib.Logs.MessageType">
            <summary>
            Представляет перечисление возможных типов выводимых сообщений
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.MessageType.None">
            <summary>
            Обычный
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.MessageType.Information">
            <summary>
            Информация
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.MessageType.Warning">
            <summary>
            Предупреждение
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.MessageType.Error">
            <summary>
            Ошибка
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Logs.MessageType.Debug">
            <summary>
            Отладка
            </summary>
        </member>
        <member name="T:Feodosiya.Lib.Logs.Log">
            <summary>
            Представляет методы для создания лог-файла и его последующей записи и сохранения
            </summary>
        </member>
        <member name="T:Feodosiya.Lib.Logs.Log.ExceptionEventHandler">
            <summary>
            Представляет метод, обрабатывающий событие ExceptionThrownEvent
            <param name="exception">Ошибка инициатор события</param>
            </summary>
        </member>
        <member name="E:Feodosiya.Lib.Logs.Log.ExceptionThrownEvent">
            <summary>
            Происходит при ошибке во время работы с лог-файлом
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Logs.Log.#ctor">
            <summary>
            Инициализирует пустой экземпляр класса Log
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Logs.Log.#ctor(System.String)">
            <summary>
            Инициализирует пустой экземпляр класса Log с заданным путем лог-файла
            </summary>
            <param name="logPath">Имя создаваемого лог-файла</param>
        </member>
        <member name="M:Feodosiya.Lib.Logs.Log.#ctor(System.String,Feodosiya.Lib.Logs.LogTypes)">
            <summary>
            Инициализирует пустой экземпляр класса Log с заданным путем и типом лог-файла
            </summary>
            <param name="logPath">Имя создаваемого лог-файла</param>
            <param name="logType">Тип создаваемого лог-файла</param>
        </member>
        <member name="P:Feodosiya.Lib.Logs.Log.LogPath">
            <summary>
            Возвращает или задает имя текущего лог-файла
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Logs.Log.InsertDate">
            <summary>
            Возвращает или задает значение, определяющее, будет ли при записи в лог-файл, в начале строки, выводиться текущая дата операции
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Logs.Log.DateFormat">
            <summary>
            Возвращает или задает значение, определяющее формат выводимой даты в начале строки. Для обращения к данному свойсту, значение свойства InsertDate  должно быть true
            </summary>
            <exception cref="T:System.InvalidOperationException"/>
        </member>
        <member name="P:Feodosiya.Lib.Logs.Log.LogType">
            <summary>
            Возвращает тип текущего лог-файла
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Logs.Log.LogLength">
            <summary>
            Получает размер текущего лог-файла в байтах
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Logs.Log.AutoCompress">
            <summary>
            Возвращает или задает значение, определяющее будет-ли автоматически сжат лог-файл, после достижения его размера до значения заданного в параметре MaxLogSize
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Logs.Log.MaxLogLength">
            <summary>
            При установленном значении true параметра AutoCompress, определяет максимальный размер лог-файла в байтах, после превышения которого произойдет его архивация. Значение по умолчанию равняется 500 KB
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Logs.Log.EnableThrows">
            <summary>
            Определяет будет ли перехвачена ошибка возникшая во время работы с лог-файлом
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Logs.Log.Write(System.String,Feodosiya.Lib.Logs.MessageType)">
            <summary>
            Записывает строку с указанным текстом в лог-файл
            </summary>
            <param name="text">Текст для записи</param>
            <param name="msgType">Тип выводимого сообщения</param>
            <exception cref="T:System.FormatException"/>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.IO.PathTooLongException"/>
            <exception cref="T:System.IO.DirectoryNotFoundException"/>
            <exception cref="T:System.IO.IOException"/>
            <exception cref="T:System.UnauthorizedAccessException"/>
            <exception cref="T:System.IO.FileNotFoundException"/>
            <exception cref="T:System.NotSupportedException"/>
            <exception cref="T:System.Security.SecurityException"/>
        </member>
        <member name="M:Feodosiya.Lib.Logs.Log.Write(System.String,System.Text.Encoding,Feodosiya.Lib.Logs.MessageType)">
            <summary>
            Записывает строку с указанным текстом в лог-файл
            </summary>
            <param name="text">Текст для записи</param>
            <param name="encoding">Кодировка записываемого текста</param>
            <param name="msgType">Тип выводимого сообщения</param>
            <exception cref="T:System.FormatException"/>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.IO.PathTooLongException"/>
            <exception cref="T:System.IO.DirectoryNotFoundException"/>
            <exception cref="T:System.IO.IOException"/>
            <exception cref="T:System.UnauthorizedAccessException"/>
            <exception cref="T:System.IO.FileNotFoundException"/>
            <exception cref="T:System.NotSupportedException"/>
            <exception cref="T:System.Security.SecurityException"/>
        </member>
        <member name="M:Feodosiya.Lib.Logs.Log.SaveFromMemory">
            <summary>
            Сохраняет лог-файл из памяти на накопитель информации
            </summary>
            <exception cref="T:System.InvalidOperationException"/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Feodosiya.Lib.Logs.Log.SaveFromMemory(System.Text.Encoding)">
            <summary>
            Сохраняет лог-файл из памяти на накопитель информации
            </summary>
            <param name="encoding">Кодировка записываемого текста</param>
            <exception cref="T:System.InvalidOperationException"/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:Feodosiya.Lib.Logs.Log.Compress(System.String,System.String)">
            <summary>
            Помещает указанный текстовый файл-лог в архив и сохраняет его по заданному пути. Если файл архива с таким именем уже существует, то он будет перезаписан
            </summary>
            <param name="logPath">Путь к исходному лог-файлу</param>
            <param name="gzName">Имя создаваемого сжатого лог-файла</param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.IO.PathTooLongException"/>
            <exception cref="T:System.IO.DirectoryNotFoundException"/>
            <exception cref="T:System.IO.IOException"/>
            <exception cref="T:System.IO.FileNotFoundException"/>
            <exception cref="T:System.UnauthorizedAccessException"/>
            <exception cref="T:System.NotSupportedException"/>
            <exception cref="T:System.Security.SecurityException"/>
            <exception cref="T:System.Text.EncoderFallbackException"/>
            <exception cref="T:System.InvalidOperationException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Feodosiya.Lib.Logs.Log.Delete">
            <summary>
            Удаляет лог-файл с накопителя информации либо из памяти
            </summary>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.IO.DirectoryNotFoundException"/>
            <exception cref="T:System.IO.IOException"/>
            <exception cref="T:System.IO.PathTooLongException"/>
            <exception cref="T:System.UnauthorizedAccessException"/>
            <exception cref="T:System.NotSupportedException"/>
        </member>
        <member name="T:Feodosiya.Lib.Math.MathHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Math.MathHelper.ToNegative(System.Int32)">
            <summary>
            
            </summary>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="T:Feodosiya.Lib.Net.FTPHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Net.FTPHelper.Host">
            <summary>
            Возвращает или задает IP адрес или доменное имя сервера FTP, к которому будет осуществляться подключение
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Net.FTPHelper.RootDirectory">
            <summary>
            Возвращает или задает удаленный корневой каталог
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Net.FTPHelper.Credentials">
            <summary>
            Возвращает или задает учетные данные для подключения к серверу FTP
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Net.FTPHelper.Timeout">
            <summary>
            Возвращает или задает промежуток времени в миллисекундах до истечения срока действия запроса
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Net.FTPHelper.#ctor">
            <summary>
            Инициализирует новый экземпляр класса FTPHelper
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Net.FTPHelper.#ctor(System.String,System.String,System.Net.NetworkCredential)">
            <summary>
            Инициализирует новый экземпляр класса FTPHelper с указанными параметрами
            </summary>
            <param name="host">IP адрес или доменное имя сервера FTP, к которому будет осуществляться подключение</param>
            <param name="rootDirectory">Удаленный корневой  каталог</param>
            <param name="credentials">Учетные данные для подключения к серверу FTP</param>
        </member>
        <member name="M:Feodosiya.Lib.Net.FTPHelper.#ctor(System.String,System.String,System.Net.NetworkCredential,System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса FTPHelper с указанными параметрами
            </summary>
            <param name="host">IP адрес или доменное имя сервера FTP, к которому будет осуществляться подключение</param>
            <param name="rootDirectory">Удаленный корневой  каталог</param>
            <param name="credentials">Учетные данные для подключения к серверу FTP</param>
            <param name="timeout">Промежуток времени в миллисекундах до истечения срока действия запроса</param>
        </member>
        <member name="M:Feodosiya.Lib.Net.FTPHelper.GetDirectoryList(System.String)">
            <summary>
            
            </summary>
            <param name="directory"></param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Net.FTPHelper.UploadFile(System.String,System.String)">
            <summary>
            Выгружает заданный файл на FTP сервер
            </summary>
            <param name="file">Файл подлежащий выгрузке на сервер</param>
            <param name="destDirectory">Удаленный каталог, в который будет выгружен файл. Путь указывается относительно корневого каталога</param>
        </member>
        <member name="M:Feodosiya.Lib.Net.FTPHelper.DownloadFile(System.String,System.String)">
            <summary>
            Загружает заданный файл с FTP сервера
            </summary>
            <param name="file">Удаленный файл. Путь указывается относительно корневого каталога</param>
            <param name="destDirectory">Локальный каталог, в который будет выгружен файл.</param>
        </member>
        <member name="M:Feodosiya.Lib.Net.FTPHelper.DeleteFile(System.String)">
            <summary>
            Удаляет заданный файл на FTP сервере
            </summary>
            <param name="file">Удаленный файл. Путь указывается относительно корневого каталога</param>
        </member>
        <member name="T:Feodosiya.Lib.Security.Pbkdf2Cryptography">
            <summary>
            Предоставляет методы для шифрования и защиты информации
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Security.Pbkdf2Cryptography.SaltByteSize">
            <summary>
            Количество байт соли
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Security.Pbkdf2Cryptography.HashByteSize">
            <summary>
            Количество байт хеша
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Security.Pbkdf2Cryptography.KeyByteSize">
            <summary>
            Количество байт ключа
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Security.Pbkdf2Cryptography.Pbkdf2Iterations">
            <summary>
            Количество итераций Pbkdf2
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Security.Pbkdf2Cryptography.IterationIndex">
            <summary>
            Индекс итераций
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Security.Pbkdf2Cryptography.SaltIndex">
            <summary>
            Индекс соли
            </summary>
        </member>
        <member name="F:Feodosiya.Lib.Security.Pbkdf2Cryptography.Pbkdf2Index">
            <summary>
            Индекс Pbkdf2
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Security.Pbkdf2Cryptography.HashPassword(System.String)">
            <summary>
            Возвращает хешированный пароль
            </summary>
            <param name="password">Пароль</param>
            <returns>Хеш пароля</returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.Pbkdf2Cryptography.ValidatePassword(System.String,System.String)">
            <summary>
            Проверяет валидность хеша пароля
            </summary>
            <param name="password">Пароль</param>
            <param name="correctHash">Хеш для сверки</param>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.Pbkdf2Cryptography.SlowEquals(System.Byte[],System.Byte[])">
            <summary>
            Сраавнивает два массива байт
            </summary>
            <param name="a">Первый массив байт</param>
            <param name="b">Второй массив байт</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.Pbkdf2Cryptography.GetPbkdf2Bytes(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Возвращает псевдослучайный ключ пароля в соответствии со стандартом RFC 2898
            </summary>
            <param name="password">Пароль</param>
            <param name="salt">Соль</param>
            <param name="iterations">Количество итераций</param>
            <param name="outputBytes">Число байтов псевдослучайного ключа</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.Pbkdf2Cryptography.Generate256BitsOfRandomEntropy">
            <summary>
            Возвращает произвольные байты
            </summary>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.Pbkdf2Cryptography.GetMD5Hash(System.String)">
            <summary>
            Расчитывает MD5 хеш для заданной строки
            </summary>
            <param name="source">Строка для которой расчитывается MD5 хеш</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.Pbkdf2Cryptography.GetMD5Hash(System.Byte[])">
            <summary>
            Расчитывает MD5 хеш для заданной строки
            </summary>
            <param name="source">Массив байт для которого расчитывается MD5 хеш</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.Pbkdf2Cryptography.Encrypt(System.Byte[],System.String)">
            <summary>
            Шифрует указанный массив байт
            </summary>
            <param name="plainTextBytes">Данные для шифрования</param>
            <param name="passPhrase">Пароль для шифрования</param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.Pbkdf2Cryptography.Decrypt(System.String,System.String,System.Int32@)">
            <summary>
            Дешифрует строку в массив байт
            </summary>
            <param name="cipherText">Строка для дешифрации</param>
            <param name="passPhrase">Пароль для дешифрации</param>
            <param name="decryptedCount">Возращает количество дешифрованных байт</param>
            <returns></returns>
        </member>
        <member name="T:Feodosiya.Lib.Security.SecurityHelper">
            <summary>
            Предоставляет методы для работы с привилегиями и безопасностью в ОС
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Security.SecurityHelper.IsAdministrator">
            <summary>
            Выполняет проверку относится ли текущий пользователь к группе администраторов
            </summary>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.SecurityHelper.CheckCertificateExists(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
            <summary>
            Проверяет наличие установленного сертификата в системе
            </summary>
            <param name="storeName">Одно из значений перечисления, указывающее имя хранилища сертификатов X.509</param>
            <param name="storeLocation">Одно из значений перечисления, определяющее расположение хранилища сертификатов X.509</param>
            <param name="certName">Имя сертфиката</param>
            <returns></returns>
        </member>
        <member name="T:Feodosiya.Lib.Security.StringHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Security.StringHelper.Encoding">
            <summary>
            
            </summary>
        </member>
        <member name="P:Feodosiya.Lib.Security.StringHelper.PassPhrase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Security.StringHelper.GetDecryptedString(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Feodosiya.Lib.Security.StringHelper.GetDecryptedString(System.String,System.String,System.Text.Encoding)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <param name="passPhrase"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="T:Feodosiya.Lib.OS.SystemHelper">
            <summary>
            Класс предоставляющий методы для работы с системой
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.OS.SystemHelper.ExitWindows(System.IntPtr,System.UInt32)">
            <summary>
            Выполняет выход из сеанса пользователя, зевершение работы системы или её перезагрузку
            </summary>
            <param name="procHandle">Дескриптор приложения выполняющего вызов данного метода</param>
            <param name="shutdownFlag">Вариант завершения работы</param>
        </member>
        <member name="M:Feodosiya.Lib.OS.SystemHelper.CurrentUserName">
            <summary>
            Возвращает имя пользователя текущего сеанса
            </summary>
            <returns></returns>
        </member>
        <member name="T:Feodosiya.Lib.Text.JsonHelper">
            <summary>
            Класс предоставляющий методы для работы с JSON
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Text.JsonHelper.FormatJson(System.String)">
            <summary>
            Форматирует указанную строку JSON в читабельную
            </summary>
            <param name="jsonStr">Исходная строка для форматирования</param>
            <returns></returns>
        </member>
        <member name="T:Feodosiya.Lib.Threading.ThreadingHelper">
            <summary>
            Класс содержащий методы для работы с многопоточностью
            </summary>
        </member>
        <member name="M:Feodosiya.Lib.Threading.ThreadingHelper.InvokeIfRequired(System.Windows.Forms.Control,System.Action)">
            <summary>
            Вызов делегата через Control.Invoke, если это необходимо
            </summary>
            <param name="control">Элемент управления</param>
            <param name="action">Делегат с необходимым действием</param>
        </member>
        <member name="M:Feodosiya.Lib.Threading.ThreadingHelper.InvokeIfRequired``1(System.Windows.Forms.Control,System.Action{``0},``0)">
            <summary>
            Вызов делегата через Control.Invoke, если это необходимо
            </summary>
            <typeparam name="T">Тип параметра делегата</typeparam>
            <param name="control">Элемент управления</param>
            <param name="action">Делегат с необходимым действием</param>
            <param name="arg">Аргумент делагата с действием</param>
        </member>
    </members>
</doc>
